{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "retrieveHash",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "hash",
						"type": "uint256"
					}
				],
				"name": "storeHash",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256[]",
						"name": "idList",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256[]",
						"name": "hashList",
						"type": "uint256[]"
					}
				],
				"name": "storeHashMulti",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Guardar y recuperar hash de archivos",
			"kind": "dev",
			"methods": {
				"retrieveHash(uint256)": {
					"details": "Devuelve el hash de un archivo dado su Identificador",
					"returns": {
						"_0": "hash valor de hash para el archivo 'id'"
					}
				},
				"storeHash(uint256,uint256)": {
					"details": "Guardar Hash para un archivo dado su Identificador",
					"params": {
						"hash": "Hash del archivo",
						"id": "Identificador del archivo"
					}
				},
				"storeHashMulti(uint256[],uint256[])": {
					"details": "Almacena multiples hash para varios archivos Como la implementacion requiere vincular los hash a un identificador unico (requerimiento del negocio) se esperan 2 colecciones, una con los hashes, y la otra con los id's de los archivos hasheados"
				}
			},
			"title": "Integridad de archivos",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Integridad.sol": "Integridad"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Integridad.sol": {
			"keccak256": "0x98151e62c4abe27b5f0a772176413b27cd563b922ec123736a4910b3e4cc563d",
			"license": "GPL-3.0",
			"urls": [
				"bzz-raw://07e75e866e2ff3028057b83e4e7e200f09106255ca0ea724f124ac3cd1ceccb7",
				"dweb:/ipfs/QmVn4WxcSm6mfZwTMcgQpJv2nGzZF8NSNCtgmj4L2uBBA6"
			]
		}
	},
	"version": 1
}